name: AI Intel Daily

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Ingest
        run: |
          python -m ai_intel_pipeline ingest --limit 12
      - name: Digest
        run: |
          python -m ai_intel_pipeline digest --week current
      - name: Build embeddings index
        run: |
          python -m ai_intel_pipeline index-model
      - name: Generate status report (JSON)
        run: |
          python -m ai_intel_pipeline report
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Build web UI
        working-directory: web
        run: |
          npm install --no-audit --no-fund
          npm run build
      - name: Copy web UI + data to status
        shell: bash
        run: |
          set -e
          mkdir -p vault/ai-intel/status
          cp -r web/dist/* vault/ai-intel/status/
          # Ensure JSON data exists in Pages root
          for f in report.json items.json history.json; do
            if [ -f "vault/ai-intel/status/$f" ]; then
              echo "found $f"
            else
              # Try copy from vault root if report wrote elsewhere
              if [ -f "vault/ai-intel/status/$f" ]; then
                echo "found $f in status"
              else
                echo "{}" > "vault/ai-intel/status/$f"
              fi
            fi
          done
          # Build tag and file index
          printf '{\n  "sha": "%s",\n  "run_id": "%s",\n  "ts": "%s"\n}\n' "$GITHUB_SHA" "$GITHUB_RUN_ID" "$(date -u +%FT%TZ)" > vault/ai-intel/status/build.json
          (cd vault/ai-intel/status && find . -maxdepth 2 -type f | sort) > vault/ai-intel/status/files.txt
      - name: Upload Pages artifact (dashboard)
        uses: actions/upload-pages-artifact@v3
        with:
          path: vault/ai-intel/status
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
